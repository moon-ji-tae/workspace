장고란????
웹 서비스에서 백엔드 개발을 위해 만든 파이썬 라이브러리.

백엔드???
웹 개발은 프론트 엔드와 백 엔드로 나눠진다.
프론트 엔드는 브라우저가 화면을 구성할 때 필요한 코드를 작성하는 부분이다.
HTML, CSS, JavaScript, React, Angular, Vue, Bootstrap 등등

백엔드는 서버에서 동작하는 코드를 작성하는 부분이다. 브라우저에게 전달할
프론트 코드를 완성하는 작업을 수행한다.

-------------------------------------------------
장고 프로젝트 설정

1. 먼저 프로젝트를 생성하기 위한 곳으로 이동한다.
2. 아나콘다 프롬프트에서 cd 경로
3. django-admin startproject 프로젝트이름

-------------------------------------------------
서버가동
서버를 가동시키면 중지 시킬 필요가 없다.
가동 후 코드작업을 하게 되면 그 작업된 내용이 그대로 반영되기 때문에
서버를 재 가동할 필요가 없다.

1. manage.py 파일이 있는 곳으로 이동한다.
2. python manage.py runserver 포트번호
포트번호를 생략하면 8000번으로 설정된다.
웹 서버 국제 표준 번호는 80번이다.
포트 번호는 하나의 컴퓨터에서 프로그램을 구분하기 위한 용도로 사용한다.

----------------------------------------------------------------------------

webapp 만들기

webapp은 Django 프로젝트 안에서 관리를 목적으로 어플리케이션을 나누는
개념

1. python manage.py startapp 웹앱이름

------------------------------------------------------------

webapp 등록
생성한 webapp을 django 프로젝트가 관리할 수 있도록 등록해야 한다.

프로젝트 폴더/settings.py 파일에서 INSTALLED_APPS에 등록한다.


INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "등록할 웹앱 이름",
]

--------------------------------------------

요청 발생시 호출될 함수를 작성한다.
브라우저가 요청을 하게 되면 요청 정보를 분석하여 그에 맞는 함수를
호출하게 된다.

웹앱폴더/views.py

----------------------------------------------
주소 및 함수 등록
사용자가 요청했을 때 사용한 요청 주소를 분석하여 그에 따른
함수가 호출될 수 있도록 등록한다.
장고 프로젝트 폴더/urls.py 파일에 등록한다.

-----------------------------------------------

웹앱 폴더에 templates 폴더를 생성하고 웹 디자이너나 웹 퍼블리셔가
만들어 준 HTML 파일을 넣어준다.

------------------------------------------------

요청할 주소와 요청시 호출될 함수 등을 만들고 등록해준다.
함수 : 웹앱폴더/views.py
주소등록 : 프로젝트폴더/urls.py

--------------------------------------------------

post 방식으로 요청하는 부분이 있을 경우
프로젝트폴더/settings.py 파일의 MIDDLEWARE에 있는

"django.middleware.csrf.CsrfViewMiddleware",

를 주석처리 한다.

-------------------------------------------------------

데이터 베이스 구성..

models.py 파일에 데이터를 담을 클래스를 정의하고 마이그레이션한다.

python manage.py makemigrations
python manage.py migrate

------------------------------------------------------------

기타 필요한 내용들을 구현하여 준다.